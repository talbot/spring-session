plugins {
    id 'java-library'
    id 'io.spring.convention.repository'
    id 'io.spring.convention.springdependencymangement'
    id 'io.spring.convention.checkstyle'
    id 'io.spring.convention.tests-configuration'
    id 'io.spring.convention.integration-test'
    id 'org.springframework.propdeps'
}

configurations {
    classesOnlyElements {
        canBeConsumed = true
        canBeResolved = false
    }
}

artifacts {
    classesOnlyElements(compileJava.destinationDir)
}

dependencies {
    api project(':spring-session-core')
    optional "com.hazelcast:hazelcast:5.2.0"
    api "org.springframework:spring-context"
    api "jakarta.annotation:jakarta.annotation-api"

    testImplementation "jakarta.servlet:jakarta.servlet-api"
    testImplementation "org.assertj:assertj-core"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.springframework:spring-test"
    testImplementation "org.springframework:spring-web"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.springframework.security:spring-security-core"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"

    integrationTestCompile "org.testcontainers:testcontainers"
    integrationTestCompile "com.hazelcast:hazelcast:5.2.0"
    integrationTestCompile project(":spring-session-hazelcast")
}

